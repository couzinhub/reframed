function generatePaintingsJSON() {
  const root = DriveApp.getFolderById("1fVJDxXo8HMov0qZdA_JbbkL5QBqoJ7tq"); 
  const artists = root.getFolders();
  const data = {};

  while (artists.hasNext()) {
    const artistFolder = artists.next();
    const artistName = artistFolder.getName();
    const files = artistFolder.getFiles();

    const items = [];
    while (files.hasNext()) {
      const file = files.next();
      const filename = file.getName();

      // keep your current filename filter
      if (filename.match(/- (reframed|portrait - reframed)\.jpg$/i)) {
        const fileId = file.getId();
        items.push({
          filename: filename,
          driveUrl: `https://drive.google.com/uc?export=download&id=${fileId}`,
          thumbUrl: `https://drive.google.com/thumbnail?id=${fileId}&sz=w400`
        });
      }
    }

    if (items.length > 0) {
      // NEW: randomize the paintings within this artist
      shuffle(items);
      data[artistName] = items;
    }
  }

  // === Ordering rules (unchanged) ===
  const mustStart = [
    "Recently Added",
    "Classics",
    "Vincent Van Gogh",
    "Claude Monet",
    "Edward Hopper",
  ];
  const mustEnd = "Miscellaneous";

  let keys = Object.keys(data);

  const hasMisc = keys.includes(mustEnd);

  // pull out pinned groups from the pool
  const startKeys = mustStart.filter(k => keys.includes(k));
  keys = keys.filter(k => !mustStart.includes(k) && k !== mustEnd);

  // randomize the middle sections
  shuffle(keys);

  // rebuild final order
  const finalKeys = [...startKeys, ...keys];
  if (hasMisc) finalKeys.push(mustEnd);

  // build ordered JSON object
  const ordered = {};
  finalKeys.forEach(k => ordered[k] = data[k]);

  // timestamp
  ordered._lastUpdated = new Date().toISOString();

  // write images.json in the same Drive folder
  const json = JSON.stringify(ordered, null, 2);
  const out = root.getFilesByName("images.json");
  if (out.hasNext()) {
    out.next().setContent(json);
  } else {
    root.createFile("images.json", json, MimeType.JSON);
  }
}

/** Fisherâ€“Yates shuffle (in-place) */
function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}
